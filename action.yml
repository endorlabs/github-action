name: "Endor Labs Scan"
description: "Endor Labs repository scan"
author: "Endor Labs"
inputs:
  # Use this input parameter to define the base api path
  api:
    description: "Set to the Endor Labs API to use"
    default: "https://api.endorlabs.com"
  # Use this input parameter to define your api key
  api_key:
    description: "Set the API key used to authenticate with Endor Labs"
  # Use this input parameter to define your api secret
  api_secret:
    description: "Set the secret corresponding to the API key used to authenticate with Endor Labs"
  # Use this input parameter to define your gcp service account
  gcp_service_account:
    description: "Set the target service account for GCP based authentication. GCP authentication is only enabled if this flag is set. Cannot be used with `api_key`"
  # Use this input parameter to enable github action token
  # User must enable `id-token: write` permissions in their github action
  enable_github_action_token:
    description: "Set to `false` if you prefer to use another form of authentication over GitHub action OIDC tokens (default `true`)"
    default: "true"
  # Use this input parameter to define your Endor Labs tenant namespace
  namespace:
    description: "Set to the namespace of the project that you are working with (required)"
    required: true
  # Use this input parameter to provide a default endorctl version
  # If this is not the latest version, it will be replace by the latest
  endorctl_version:
    description: "Set to a version of endorctl to pin this specific version for use. Defaults to the latest version"
  endorctl_checksum:
    description: "Set to the checksum associated with a pinned version of endorctl"
  log_verbose:
    description: "Set to `true` to enable verbose logging (default `false`)"
    default: "false"
  # Set log level to debug for error troubleshooting
  log_level:
    description: "Set the endorctl log level (default `info`)"
    default: "info"
  scan_summary_output_type:
    description: "Set the desired output format to one of: `table`, `json`, `yaml`, or `summary` (default `json`)"
    default: "json"
  scan_dependencies:
    description: "Scan git commits and generate findings for all dependencies (default `true`)"
    default: "true"
  # Deprecated
  ci_run:
    description: "Deprecated, please use `pr` instead"
    default: "true"
  # Use this input parameter for PRs
  pr:
    description: "Set to `false` to track this scan in Endor Labs as a release, as opposed to a point in time policy and finding test for a PR (default `true`)"
    default: "true"
  # Set the baseline branch to enable action policies to only flag new findings
  pr_baseline:
    description: "Set the baseline branch to enable action policies to only act on new findings. Example: `pr_baseline: \"main\"`"
  # Deprecated
  ci_run_tags:
    description: "Deprecated, please use `tags` instead"
  # Use this input parameter to provide searchable tags for your scans
  tags:
    description: "Specify a list of user-defined tags to add to this scan. Tags can be used to search and filter scans later"
  # Use this input parameter to control whether `time -v` wraps runs
  run_stats:
    description: "Set to `false` to disable reporting of CPU/RAM/time scan statistics via `time -v` (default `true`)"
    default: "true"
  # Custom arguments to the endorctl binary. See the documentation for command flags.
  additional_args:
    description: "Use this to add custom arguments to the endorctl command"
  # Use this input parameter to enable/disable the artifact export. Works only with "json" output type. The artifact name will be "endor-scan" and the json output file name will be "result-<RUN_ID>.json"
  export_scan_result_artifact:
    description: "Set to `false` to disable the json scan result artifact export (default `true`)"
    default: "true"
  # Use this input parameter to export a summary of the findings to a SARIF file.
  sarif_file:
    description: "Set to a location on your GitHub runner to output the findings in SARIF format"
  # Use this input parameter to enable creating PR comments. This is applicable only when a workflow is triggered by a PR
  enable_pr_comments:
    description: "Set to `true` to publish new findings as review comments. Must be set with `pr` and `github_token`. Additionally, `issues:write` and `pull-requests:write` permissions must be set in the workflow (default `false`)"
    default: "false"
  # Use this parameter to provide the GITHUB_TOKEN for your repo
  github_token:
    description: "Provide your github token here. This is required if `enable_pr_comments` when set to `true`"
  # Secrets
  scan_secrets:
    description: "Scan source code repository and generate findings for secrets. See also `scan_git_logs` and `pre_commit_checks` (default `false`)"
    default: "false"
  scan_git_logs:
    description: "Perform a more complete and detailed scan of secrets in the repository history. Must be used together with `scan_secrets` (default `false`)"
    default: "false"
  pre_commit_checks:
    description: "Perform Git pre-commit checks on the changeset about to be committed. Must be used together with `scan_secrets` (default `false`)"
    default: "false"
runs:
  using: "node16"
  main: "dist/index.js"
